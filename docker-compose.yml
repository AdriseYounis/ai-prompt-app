version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ai-prompt-app
    restart: unless-stopped
    ports:
      - "3000:3000" # Backend API
      - "3001:3001" # Frontend
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/ai_prompt_app?authSource=admin&directConnection=true
      - PORT=3000
      - FRONTEND_PORT=3001
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - mongodb
    volumes:
      - ./backend:/app/backend
      - ./frontend:/app/frontend
      - ./node_modules:/app/node_modules
    networks:
      - ai-prompt-network

  mongodb:
    image: mongo:7.0
    container_name: ai-prompt-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: ai_prompt_app
    command: [--auth]
    volumes:
      - mongodb_data:/data/db
      - ./scripts:/docker-entrypoint-initdb.d:ro
    networks:
      - ai-prompt-network

  mongo-express:
    image: mongo-express:1.0.0
    container_name: ai-prompt-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_AUTH_DATABASE: admin
      ME_CONFIG_MONGODB_AUTH_USERNAME: admin
      ME_CONFIG_MONGODB_AUTH_PASSWORD: password123
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: password123
      ME_CONFIG_BASICAUTH: true
    depends_on:
      - mongodb
    networks:
      - ai-prompt-network

volumes:
  mongodb_data:

networks:
  ai-prompt-network:
    driver: bridge
